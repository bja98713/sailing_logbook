# Generated by Django 4.2.24 on 2025-10-07 01:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('nautical', '0011_backfill_voyage_totals'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heure', models.TimeField(verbose_name='Heure')),
                ('date', models.DateField(verbose_name='Date')),
                ('log_nautique', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Log nautique')),
                ('cap_compas', models.IntegerField(blank=True, null=True, verbose_name='Cap compas (°)')),
                ('evenements', models.TextField(verbose_name='Événements')),
                ('vent_force', models.CharField(blank=True, max_length=50, verbose_name='Force du vent')),
                ('vent_direction', models.CharField(blank=True, max_length=50, verbose_name='Direction du vent')),
                ('allure', models.CharField(blank=True, max_length=50, verbose_name='Allure')),
                ('voilure', models.CharField(blank=True, max_length=200, verbose_name='Voilure')),
                ('position', models.CharField(blank=True, max_length=200, verbose_name='Position')),
                ('origine_position', models.CharField(blank=True, max_length=100, verbose_name='Origine position')),
                ('etat_mer', models.CharField(blank=True, max_length=100, verbose_name='État de la mer')),
                ('sonde', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True, verbose_name='Sonde (m)')),
                ('visibilite', models.CharField(blank=True, max_length=100, verbose_name='Visibilité')),
                ('barometre', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True, verbose_name='Baromètre (hPa)')),
                ('nuages_temps', models.CharField(blank=True, max_length=200, verbose_name='Nuages/Temps')),
                ('courants', models.CharField(blank=True, max_length=200, verbose_name='Courants')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Entrée de log',
                'verbose_name_plural': 'Entrées de log',
                'ordering': ['date', 'heure'],
            },
        ),
        migrations.CreateModel(
            name='VoyageCrewMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('role', models.CharField(choices=[('skipper', 'Skipper'), ('equipier', 'Équipier'), ('chef_de_bord', 'Chef de bord'), ('second', 'Second'), ('cuisinier', 'Cuisinier'), ('mecanicien', 'Mécanicien')], default='equipier', max_length=20, verbose_name='Rôle')),
                ('contact_nom', models.CharField(blank=True, max_length=100, verbose_name='Contact prévu - Nom')),
                ('contact_telephone', models.CharField(blank=True, max_length=20, verbose_name='Contact prévu - Téléphone')),
                ('contact_relation', models.CharField(blank=True, max_length=100, verbose_name='Contact prévu - Relation')),
                ('date_embarquement', models.DateField(blank=True, null=True, verbose_name="Date d'embarquement")),
                ('date_debarquement', models.DateField(blank=True, null=True, verbose_name='Date de débarquement')),
            ],
            options={
                'verbose_name': "Membre d'équipage voyage",
                'verbose_name_plural': "Membres d'équipage voyage",
                'ordering': ['role', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='VoyageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('port_depart', models.CharField(max_length=200, verbose_name='Port de départ')),
                ('port_arrivee', models.CharField(blank=True, max_length=200, verbose_name="Port d'arrivée")),
                ('skipper', models.CharField(max_length=100, verbose_name='Skipper')),
                ('bateau', models.CharField(max_length=100, verbose_name='Nom du bateau')),
                ('immatriculation', models.CharField(blank=True, max_length=50, verbose_name='Immatriculation')),
                ('statut', models.CharField(choices=[('preparation', 'En préparation'), ('en_cours', 'En cours'), ('termine', 'Terminé')], default='preparation', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Livre de bord',
                'verbose_name_plural': 'Livres de bord',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='WeatherCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Date et heure')),
                ('type_bulletin', models.CharField(blank=True, max_length=50, verbose_name='Origine du bulletin')),
                ('situation_generale', models.TextField(blank=True, verbose_name='Situation générale')),
                ('prev_jour_vent', models.CharField(blank=True, max_length=200, verbose_name='Vent prévu (jour)')),
                ('prev_jour_mer', models.CharField(blank=True, max_length=200, verbose_name='Mer prévue (jour)')),
                ('prev_jour_houle', models.CharField(blank=True, max_length=200, verbose_name='Houle prévue (jour)')),
                ('prev_jour_temps', models.CharField(blank=True, max_length=200, verbose_name='Temps prévu (jour)')),
                ('prev_jour_visibilite', models.CharField(blank=True, max_length=100, verbose_name='Visibilité prévue (jour)')),
                ('prev_nuit_vent', models.CharField(blank=True, max_length=200, verbose_name='Vent prévu (nuit)')),
                ('prev_nuit_mer', models.CharField(blank=True, max_length=200, verbose_name='Mer prévue (nuit)')),
                ('prev_nuit_houle', models.CharField(blank=True, max_length=200, verbose_name='Houle prévue (nuit)')),
                ('prev_nuit_temps', models.CharField(blank=True, max_length=200, verbose_name='Temps prévu (nuit)')),
                ('prev_nuit_visibilite', models.CharField(blank=True, max_length=100, verbose_name='Visibilité prévue (nuit)')),
                ('tend_vent', models.CharField(blank=True, max_length=200, verbose_name='Tendance vent')),
                ('tend_mer', models.CharField(blank=True, max_length=200, verbose_name='Tendance mer')),
                ('tend_houle', models.CharField(blank=True, max_length=200, verbose_name='Tendance houle')),
                ('tend_temps', models.CharField(blank=True, max_length=200, verbose_name='Tendance temps')),
                ('tend_visibilite', models.CharField(blank=True, max_length=100, verbose_name='Tendance visibilité')),
                ('marees', models.TextField(blank=True, verbose_name='Informations marées')),
                ('voyage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions_meteo', to='nautical.voyagelog')),
            ],
            options={
                'verbose_name': 'Condition météorologique',
                'verbose_name_plural': 'Conditions météorologiques',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='VoyageIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Date et heure')),
                ('type_incident', models.CharField(choices=[('personne', 'Incident de personne'), ('materiel', 'Incident matériel'), ('navigation', 'Incident de navigation'), ('meteo', 'Incident météorologique')], max_length=20, verbose_name="Type d'incident")),
                ('gravite', models.CharField(choices=[('mineur', 'Mineur'), ('moyen', 'Moyen'), ('grave', 'Grave'), ('critique', 'Critique')], default='mineur', max_length=20, verbose_name='Gravité')),
                ('description', models.TextField(verbose_name="Description de l'incident")),
                ('actions_prises', models.TextField(blank=True, verbose_name='Actions prises')),
                ('log_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='nautical.logentry')),
                ('personnes_concernees', models.ManyToManyField(blank=True, to='nautical.voyagecrewmember', verbose_name='Personnes concernées')),
                ('voyage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='nautical.voyagelog')),
            ],
            options={
                'verbose_name': 'Incident voyage',
                'verbose_name_plural': 'Incidents voyage',
                'ordering': ['datetime'],
            },
        ),
        migrations.AddField(
            model_name='voyagecrewmember',
            name='voyage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipage', to='nautical.voyagelog'),
        ),
        migrations.AddField(
            model_name='logentry',
            name='voyage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='nautical.voyagelog'),
        ),
    ]
